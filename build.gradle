plugins {
	id "groovy"
}

version "1.0.0"

repositories {
	mavenCentral()
}

dependencies {
   compile "javax:javaee-api:7.0"
	compile "org.codehaus.groovy:groovy-all:2.4.7"
	compile "io.swagger:swagger-jersey2-jaxrs:1.5.8"
	compile "io.undertow:undertow-core:1.3.22.Final"
	compile "io.undertow:undertow-servlet:1.3.22.Final"

	testCompile "junit:junit:4.12"
	testCompile "com.github.tomakehurst:wiremock:1.57"
}

sourceSets {
	featureTest {
      groovy {
         compileClasspath = main.output + configurations.testCompile
         runtimeClasspath += compileClasspath
      }
	}
}

jar {
	manifest {
		attributes(
			"Implementation-Title": project.name,
			"Implementation-Version": project.version,
         "Main-Class": "com.ibm.rot.Main"
		)
	}

	from { configurations.compile.collect { zipTree(it) } }
}

task dist(type: Copy) {
	dependsOn assemble
	outputs.dir "$distsDir/main"
	from "src/main/resources"
	from "build/libs"
	into "$distsDir/main"
}

task featureTest(type: Test) {
   classpath = sourceSets.featureTest.runtimeClasspath
   testClassesDir = sourceSets.featureTest.output.classesDir
   outputs.dir reports.junitXml.destination
   outputs.dir reports.html.destination
}

tasks.withType(Test) {
	dependsOn "clean${name.capitalize()}"
   ignoreFailures = true
	onOutput { desc, event -> print event.message }
	beforeSuite { if (it.className) { println "Running ${it.name}" } }
   beforeTest { println it.name }

	afterSuite { desc, result ->
      if (desc.className) {
         println "Tests: ${result.testCount}, Failures: ${result.failedTestCount}, " +
            "Errors: ${result.exceptions.size()}, Skipped: ${result.skippedTestCount}"
      }
   }
}